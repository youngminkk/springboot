# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Set execute permissions for Gradle
      run: chmod +x ./gradlew
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.SPRINGBOOT_APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
    - run: cat ./src/main/resources/application.properties
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
  # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

      # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

      # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./springboot-build.zip ./deploy

      # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: 
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \ 
	  ./springboot-build.zip s3://springboot-git-build/
