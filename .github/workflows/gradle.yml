# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Set execute permissions for Gradle
      run: chmod +x ./gradlew
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.SPRINGBOOT_APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
    - run: cat ./src/main/resources/application.properties
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
        
    # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy
        
    # Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy
    # appspec.yml Copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy
    # deploy.sh Copy
    #- name: Copy script
    #  run: cp ./deploy.sh ./deploy

    - name: Make zip file
      run: zip -r -qq -j ./springboot-build.zip ./deploy
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./springboot-build.zip s3://springboot-git-build/

    - name: Code Deploy
      run: aws deploy create-deployment
        --region ap-northeast-2
        --application-name springboot-git 
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name springboot-git-group
        --s3-location bucket=springboot-git-build,bundleType=zip,key=springboot-build.zip